Object subclass: #Armas	instanceVariableNames: 'municion ataque'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Armas methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 10:57'!descontarMunicion	municion := municion - 1.! !!Armas methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 17:20'!dispararDirigidoConEscenario: unEscenario  ConPosicion: unaPosicion	"los disparos dirigidos son aquellos que lanzan los enemigos, y todos se dirigen siempre hacia el jugador."	| d |	(self getMunicion > 0 ) ifTrue: [		d := DisparoDirigido crearConEscenario: unEscenario ConAtaque: ataque ConPosicion: unaPosicion.		d mover.		unEscenario agregarObjetoMovil: d.		self descontarMunicion .		].	! !!Armas methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 01:02'!dispararSimpleConEscenario: unEscenario  ConPosicion: unaPosicion	"solo el jugador puede hacer disparos simples. los disparos simples son disparos que salen del jugador y 'suben' verticalmente hasta desaparecer."	| d |	(self getMunicion > 0 ) ifTrue: [		d := DisparoSimple crearConEscenario: unEscenario ConAtaque: ataque ConPosicion: unaPosicion.		d mover.		unEscenario agregarObjetoMovil: d.		self descontarMunicion .  		].	! !!Armas methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/15/2011 23:47'!getAtaque	^ataque .	! !!Armas methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/17/2011 10:37'!getMunicion	^municion.! !!Armas methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 00:14'!sumarMunicion: x	municion := municion + x.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Armas class	instanceVariableNames: ''!!Armas class methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/15/2011 23:29'!crear	| a |	a := self new.	a inicializar.	^a.! !Armas subclass: #Cohete	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Cohete methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/17/2011 10:37'!inicializar	ataque := 50.	municion := 100.! !Object subclass: #Escenario	instanceVariableNames: 'objetosActivos objetosNuevos jugador flota objetosEliminados tamano IA'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Escenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 22:18'!agregarObjetoMovil: x	"Ingresa un objeto movil al escenario. a partir de este momento, sera dirigido por su IA, aunque tambien puede responder a mensajes directos (como hacemos en las pruebas)."	(jugador = nil) ifTrue: [		EscenarioSinJugador new signal.		].	(((objetosActivos  indexOf: x ifAbsent: [0]) > 0) | ((objetosNuevos   indexOf: x ifAbsent: [0]) > 0)) ifTrue: [		ObjetoDuplicado new signal.		] ifFalse: [		objetosNuevos   addLast: x.		].	! !!Escenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 17:05'!estaDentro: unaPosicion	"Devuelve T o F segun si la posicion esta dentro de los limites del escenario. Util para validar posiciones, y asi no salirse del escenario."		^(unaPosicion getX >= 0) & (unaPosicion getY >= 0) & (unaPosicion getX <= tamano) & (unaPosicion getY <= tamano).! !!Escenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 17:06'!estaEnBorde: unaPosicion	"Devuelve T o F segun si la posicion se encuentra en el borde del escenario. recordar que un escenario esta definido por [0;Tam] x [0;Tam]."		^ (unaPosicion getX = tamano)  | (unaPosicion getY = tamano) | (unaPosicion getX = 0) | (unaPosicion getY = 0) .! !!Escenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/22/2011 15:11'!gameLoop	"Primero agregamos los objetos nuevos"	objetosNuevos  do: [		:nuevoObjeto|		objetosActivos  add: nuevoObjeto.		].	"y vaciamos la lista de objetos nuevos."	objetosNuevos  := LinkedList new.		objetosActivos  do: [		: i|		"Le pedimos a cada objeto que haga algo, es decir, que le diga a su IA que haga algo con él."		i vivir.	].	objetosActivos  do: [		: objetoActual|		objetosActivos   do: [			: otroObjeto|			"ahora buscamos posiciones iguales"			(((objetoActual getPosicion ) equalsTo: (otroObjeto getPosicion) ) & ((objetosActivos  indexOf: objetoActual) ~= (objetosActivos  indexOf: otroObjeto) )) ifTrue: [				objetoActual interactuarCon: otroObjeto .				].			].		].	objetosEliminados do:[		: i|		objetosActivos  remove: i ifAbsent: [		"Como resultado de las interacciones y los gameloops, puede que algun avion sea matado 'mas de una vez' (esto ocurre si, por ejemplo, dos disparos del jugador impactan al mismo tiempo sobre una avion enemigo debil, el avion enemigo sabe que, en el primer disparo, su energia llego a cero, por lo tanto, informa su destrucion al escenario, el cual, guarda una referencia al mismo en la lista de ObjetosEliminados. Luego viene el segundo disparo... ver el mensaje 'atacar' de la clase 'Personajes' para entender esto). En estos casos, hay que ignorar los duplicados."			]		].	"vaciamos la lista de objetos eliminados."	objetosEliminados := LinkedList new.	"El escenario tambien tiene una IA, la cual se encarga de ingresar helicopteros y aviones civiles cada tanto."	IA hacer.	"hacemos vivir a la flota, la cual solo ingresa aviones cada tanto."	(flota = nil) ifFalse: [		flota vivir.		].	! !!Escenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 13:21'!getJugador	(jugador = nil) ifTrue: [		EscenarioSinJugador new signal.		] ifFalse: [		^jugador.		].	! !!Escenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 12:21'!getTamano	^tamano .! !!Escenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 22:32'!informarDestruccion: x		"Cuando un personaje es eliminado, el jugador cobra sus puntos por destruccion, y el objeto es enviado a la lista de objetos eliminados, los cuales seran eliminados definitivamente en el siguiente gameloop (ver el codigo del gameloop para mas informacion sobre esto)."	((objetosActivos  indexOf: x ifAbsent: [0]) = 0) ifTrue: [		ObjetoAusente new signal.		] ifFalse: [		objetosEliminados addLast: x.		jugador sumarPuntuacion: (x getPuntosPorDestruccion) .		].		(jugador getPuntuacion >= 1000) ifTrue: [		Transcript show: 'Ganaste!! tu puntuacion es: '; show: jugador getPuntuacion ; cr.		self inicializarConTamano: tamano .		].		! !!Escenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 22:32'!informarSalida: x	"Idem InformarDestruccion, pero sin cobrar puntos, es decir, este metodo es el 'morir' de los objetos que no tienen puntos por destruccion, como los misiles."	((objetosActivos  indexOf: x ifAbsent: [0]) = 0) ifTrue: [		ObjetoAusente new signal.		] ifFalse: [		objetosEliminados addLast: x.		].		! !!Escenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 22:20'!inicializarConTamano: x	objetosActivos  := LinkedList new.	objetosNuevos   := LinkedList new.	objetosEliminados := LinkedList new.	tamano := x.	IA := IAEscenario crearPara: self.	jugador := nil.	flota := nil.	! !!Escenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 02:07'!setFlota: x	"Al crear una flota, ésta se registra como la flota enemiga del escenario. No es necesario setear manualmente a la flota."	flota := x.! !!Escenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:34'!setJugador: x	"Al crear un jugador, este se registra automaticamente como 'EL' jugador del escenario. por lo tanto, este metodo es usado solamente por él una unica vez."	jugador := x.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Escenario class	instanceVariableNames: ''!!Escenario class methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 13:21'!crearConTamano: x	| a |	(x <=0 ) ifTrue: [		TamanoIncorrecto new signal.		].	a := self new.	a inicializarConTamano: x.  	^a.  ! !Error subclass: #EscenarioSinJugador	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!Object subclass: #Flota	instanceVariableNames: 'IA limite'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Flota methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 18:53'!inicializarConEscenario: unEscenario ConLimite: unLimite	unEscenario setFlota: self.	IA := IAFlota crearPara: unEscenario ConLimite: unLimite.	limite := unLimite .	! !!Flota methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 02:54'!vivir	IA hacer.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Flota class	instanceVariableNames: ''!!Flota class methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 18:48'!crearConEscenario: unEscenario ConLimite: unLimite	| flota |	flota := self new.	flota inicializarConEscenario: unEscenario ConLimite: unLimite .	^flota.! !Object subclass: #IA	instanceVariableNames: 'titere'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!IA methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/22/2011 13:36'!hacer	self subclassResponsibility .! !!IA methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/22/2011 13:37'!inicializarPara: objeto	self subclassResponsibility .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!IA class	instanceVariableNames: ''!!IA class methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/17/2011 10:48'!crearPara: objeto	| ia |	ia := self new.	ia inicializarPara: objeto.	^ia.! !IA subclass: #DeIzquierdaADerecha	instanceVariableNames: 'fase'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!DeIzquierdaADerecha methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 00:14'!hacer	"Esta IA mueve al titere de izquierda a derecha, cambiendo de direccion solo si llega al borde del escenario."	(fase negative ) ifTrue: [		titere moverIzquierda .		] ifFalse: [		titere moverDerecha .		].	(titere estaEnBorde ) ifTrue: [		fase negated.		].	! !!DeIzquierdaADerecha methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 23:39'!inicializarPara: objeto	titere := objeto.  	fase := 1.! !IA subclass: #DeIzquierdaADerechaYSalirDelEscenario	instanceVariableNames: 'fase'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!DeIzquierdaADerechaYSalirDelEscenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 01:38'!hacer	"Esta IA mueve al titere de izquierda a derecha, cambiendo de direccion solo si llega al borde del escenario. luego de unas cinco pasadas, el titere se retira. es la IA de los aviones civiles."	(fase isDivisibleBy: 2 ) ifTrue: [		titere moverIzquierda .		] ifFalse: [		titere moverDerecha .		].	(titere estaEnBorde ) ifTrue: [		fase := fase +1.		].	(fase = 5) ifTrue: [		titere salir.		].		! !!DeIzquierdaADerechaYSalirDelEscenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 01:14'!inicializarPara: objeto	titere := objeto.  	fase := 1.! !IA subclass: #EnDireccionAlJugador	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!EnDireccionAlJugador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 00:15'!hacer	"Esta IA hace apuntar al titere hacia donde esta el jugador, luego lo hace marchar en ésa direccion sin cambiar de rumbo. es la IA de los disparos dirigidos (que son los disparos que hacen los enemigos). "	titere mover.	(titere estaEnBorde ) ifTrue: [		titere salir.		].	! !!EnDireccionAlJugador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/17/2011 00:46'!inicializarPara: objeto	titere := objeto.	titere apuntarAlJugador .! !IA subclass: #IAAvionGuia	instanceVariableNames: 'pasos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!IAAvionGuia methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/22/2011 15:14'!hacer	"Esta IA mueve al avion guia de izquierda a derecha sin llegar a los bordes del escenario. Cada 4 gameloops dispara un arma diferente, y cada 6 un torpedo rastreador."	(pasos < 10) ifTrue: [		titere moverIzquierda .		] ifFalse: [		titere moverDerecha .		].	(pasos > 20) ifTrue: [		pasos := 0.		].	(pasos isDivisibleBy: 4  ) ifTrue: [		titere disparar.		titere cambiarArma .		].	(pasos isDivisibleBy: 6  ) ifTrue: [		titere dispararTorpedoRastreador .		].	pasos := pasos +1.	! !!IAAvionGuia methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 12:38'!inicializarPara: objeto	titere := objeto.  	pasos := 1.! !IA subclass: #IAEscenario	instanceVariableNames: 'pasos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!IAEscenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 00:21'!hacer	"La IA del escenario solo se encarga de agregar helicopteros y aviones civiles cada tanto."	(pasos = 50) ifTrue: [titere agregarObjetoMovil: (Helicoptero crearConEscenario: titere  EnX: 0 EnY: 0). ].	(pasos = 100) ifTrue: [titere agregarObjetoMovil: (AvionCivil crearConEscenario: titere EnX: 0 EnY: 0). ].	pasos := pasos +1.	(pasos > 100) ifTrue: [		pasos := 0.		].	! !!IAEscenario methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 12:14'!inicializarPara: objeto	titere := objeto.  	pasos := 0.! !IA subclass: #IAFlota	instanceVariableNames: 'contador avionGuia limite'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!IAFlota methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 18:54'!hacer	"Esta es la IA de la flota, es decir, esto se encarga de ingresar aviones enemigos regularmente, incluso mas de uno por gameloop. Luego de 500 gameloops, ingresa el avion guia, a modo de duelo con el jugador, como ocurria en el 1943. destruido el avion guia, finaliza el nivel. aqui, el 'titere' de la IA es el escenario."	(contador < limite) ifTrue: [		(contador isDivisibleBy: 4) ifTrue: [			titere agregarObjetoMovil: (Avioneta crearConEscenario: titere  EnX: (titere getTamano / 2 ) EnY: (titere getTamano )).			].		(contador isDivisibleBy: 5) ifTrue: [			titere agregarObjetoMovil: (Caza crearConEscenario: titere  EnX: ( 0 ) EnY: (titere getTamano / 2 )).			].		(contador isDivisibleBy: 6) ifTrue: [			titere agregarObjetoMovil: (Explorador  crearConEscenario: titere  EnX: (titere getTamano  ) EnY: (titere getTamano / 2)).			].		(contador isDivisibleBy: 7) ifTrue: [			titere agregarObjetoMovil: (Bombardero  crearConEscenario: titere  EnX: (titere getTamano / 2 ) EnY: (titere getTamano )).			].		].	(contador = limite) ifTrue: [		avionGuia := (AvionGuia  crearConEscenario: titere  EnX: (titere getTamano / 2 ) EnY: (titere getTamano )).		titere agregarObjetoMovil: avionGuia .		].		(contador > limite) ifTrue: [		(avionGuia estaVivo ) ifFalse: [			Transcript show: 'Ganaste!!'; cr.			].		].	contador := contador +1.! !!IAFlota methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 18:52'!inicializarPara: unEscenario ConLimite: unLimite	contador := 1.	titere := unEscenario.	avionGuia := nil.	limite := unLimite .	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!IAFlota class	instanceVariableNames: ''!!IAFlota class methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 18:52'!crearPara: unaFlota ConLimite: unLimite	| ia |	ia := self new.	ia inicializarPara: unaFlota ConLimite: unLimite.	^ia.! !IA subclass: #IdaYVuelta	instanceVariableNames: 'pasos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!IdaYVuelta methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 03:38'!hacer	"esta IA hace mover al titere hacia el jugador unos 10 pasos. luego invierte su direccion. notese que solo se apunta al jugador una vez."	(pasos isDivisibleBy: 10) ifTrue: [		titere reversa.  				titere disparar.		].	titere  mover.	pasos := pasos + 1.	(pasos = 50) ifTrue: [		titere salir.		].	! !!IdaYVuelta methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 12:34'!inicializarPara: objeto.	titere := objeto.  	pasos := 1.	titere apuntarAlJugador .! !Object subclass: #Interacciones	instanceVariableNames: 'dueño valor jugador'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Interacciones methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 01:25'!inicializarPara: unObjeto ConValor: unValor	valor := unValor .	dueño := unObjeto .	jugador := unObjeto getEscenario getJugador .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Interacciones class	instanceVariableNames: ''!!Interacciones class methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/17/2011 12:16'!crearPara: unAutor ConValor: unValor	| a |	a := self new.	a inicializarPara: unAutor ConValor: unValor.	^a.! !Interacciones subclass: #AtacarACualquieraMenosAlJugador	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!AtacarACualquieraMenosAlJugador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:34'!interactuarCon: otroObjetoMovil	"Esta es la interaccion de los disparos simples (del jugador)."	(otroObjetoMovil == jugador ) ifFalse: [		otroObjetoMovil atacar: valor.		dueño salir .		]	! !Interacciones subclass: #AtacarACualquieraYSobrevivir	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!AtacarACualquieraYSobrevivir methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 00:29'!interactuarCon: otroObjetoMovil	"esta interaccion ataca a cualquier otro objeto, pero el titere no es eliminado despues de esto (como le ocurre a los disparos simples).  es la interaccion del jugador con los demas aviones (sean amigos o enemigos) ."	otroObjetoMovil atacar: valor.	! !Interacciones subclass: #AtacarAMiObjetivo	instanceVariableNames: 'objetivo'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!AtacarAMiObjetivo methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 01:43'!interactuarCon: otroObjetoMovil	"Esta es la interaccion de los torpedos ratreadores. Por ahora, solo los enemigos pueden disparar torpedos rastreadores."	(otroObjetoMovil == objetivo  ) ifTrue: [		otroObjetoMovil atacar: valor.		dueño salir .		]	! !Interacciones subclass: #AtacarAlJugador	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!AtacarAlJugador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 00:31'!interactuarCon: otroObjetoMovil	"Esta interaccion ataca SOLO al jugador. es la interaccion que tienen los disparos dirigidos (que son los de los enemigos) y los exploradores. Despues de la interaccion, el titere es sacado del escenario."	(otroObjetoMovil == jugador ) ifTrue: [		otroObjetoMovil atacar: valor.		dueño salir .		]! !Interacciones subclass: #AtacarAlJugadorYSobrevivir	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!AtacarAlJugadorYSobrevivir methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:43'!interactuarCon: otroObjetoMovil	"Esta interaccion le hace daño solo al jugador. es la interaccion de los aviones enemigos en general."		(otroObjetoMovil == jugador ) ifTrue: [		otroObjetoMovil atacar: valor.		]! !Armas subclass: #Laser	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Laser methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/17/2011 10:37'!inicializar	ataque := 20.	municion := 100.! !Interacciones subclass: #NoAtacar	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!NoAtacar methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 16:20'!interactuarCon: otroObjetoMovil	"El nombre de la clase explica todo."! !Error subclass: #ObjetoAusente	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!Error subclass: #ObjetoDuplicado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!Object subclass: #ObjetosMoviles	instanceVariableNames: 'posicion IA escenario interaccion direccion'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 14:56'!apuntarAPosicion: posicionFinal	direccion := Direccion crearDesde: posicion  Hasta: posicionFinal.	! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/20/2011 23:31'!apuntarAlJugador	[direccion := Direccion crearDesde: posicion  Hasta: (escenario getJugador getPosicion )  .] on: EscenarioSinJugador do:[	^(EscenarioSinJugador new signal).	].	! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/20/2011 23:30'!apuntarAlObjeto: unObjeto	direccion := Direccion crearDesde: posicion  Hasta: (unObjeto getPosicion).! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 00:44'!atacar: x	self subclassResponsibility .! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 11:38'!bajar	direccion := Direccion crearConX: 0 ConY: -1.	self mover.! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 23:21'!estaEnBorde	^(escenario estaEnBorde: posicion ).	! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 20:19'!getEscenario	^escenario .! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/15/2011 22:00'!getPosicion	^posicion .! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 00:43'!inicializarConEscenario: unEscenario EnX: x EnY: y	self subclassResponsibility .! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 16:11'!interactuarCon: otroObjetoMovil	interaccion interactuarCon: otroObjetoMovil .    ! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 00:57'!morir	self subclassResponsibility .! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/22/2011 15:18'!mover	"mueve al objeto movil en la direccion que ya tiene impuesta. verifica ademas que su nueva posicion siga estando dentro del escenario. si intenta salirse del borde del escenario, el movimiento es cancelado."	| auxPosicion |	auxPosicion := Posicion crearConX: (posicion getX) ConY: (posicion getY).	auxPosicion moverEnDireccion: direccion.	(auxPosicion validarConEscenario: escenario ) ifTrue: [		posicion := auxPosicion .		] .	! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 11:38'!moverDerecha 	direccion := Direccion crearConX: 1 ConY: 0.	self mover.! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 11:38'!moverIzquierda 	direccion := Direccion crearConX: -1 ConY: 0.	self mover.	! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 02:34'!moverseHacia: otraPosicion	posicion moverseHacia: otraPosicion .	! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 21:30'!reversa	direccion  reversa.	! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 23:27'!salir	escenario informarSalida: self.  ! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/17/2011 14:55'!setIA: unIA	IA := unIA.! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 11:38'!subir	direccion := Direccion crearConX: 0 ConY: 1.	self mover.! !!ObjetosMoviles methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 12:57'!vivir	IA hacer.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ObjetosMoviles class	instanceVariableNames: ''!!ObjetosMoviles class methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 19:00'!crearConEscenario: unEscenario EnX: x EnY: y	| a |	a := self new.	a inicializarConEscenario: unEscenario  EnX: x EnY: y.	^a.! !ObjetosMoviles subclass: #Disparos	instanceVariableNames: 'fuerzaDeAtaque'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Disparos methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 12:51'!atacar: x	"como los disparos son invulnerables, no reciben daño."! !!Disparos methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 00:57'!morir 	self salir.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Disparos class	instanceVariableNames: ''!!Disparos class methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/17/2011 01:29'!crearConEscenario: unEscenario ConAtaque: unAtaque ConPosicion: unaPosicion	| d |	d := self new.	d inicializarConEscenario: unEscenario ConAtaque: unAtaque ConPosicion: unaPosicion.	^d.! !Disparos subclass: #DisparoDirigido	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!DisparoDirigido methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:37'!inicializarConEscenario: unEscenario ConAtaque: unAtaque ConPosicion: unaPosicion	"un disparo dirigido es aquel que sale del avion enemigo y sale disparado en direccion al jugador. Luego sigue en trayectoria recta hasta salir del escenario."	(unAtaque <= 0) ifTrue: [		ValorDeAtaqueNegativo new signal.		].	escenario :=  unEscenario .	posicion := Posicion crearConX: (unaPosicion getX) ConY: (unaPosicion getY).	(unEscenario estaDentro: posicion ) ifFalse: [		PosicionIncorrecta new signal.		].	fuerzaDeAtaque := unAtaque.	direccion := Direccion crearDesde: posicion  Hasta: (escenario getJugador getPosicion ).			IA := (EnDireccionAlJugador crearPara: self).	interaccion := (AtacarAlJugador crearPara: self ConValor: fuerzaDeAtaque).! !Disparos subclass: #DisparoRastreador	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!DisparoRastreador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/22/2011 15:22'!inicializarConEscenario: unEscenario ConAtaque: unAtaque ConPosicion: unaPosicion ConObjetivo: unObjetivo	"los torpedos rastreadores persiguen al jugador durante un tiempo de vida determinado."	(unAtaque <= 0) ifTrue: [		ValorDeAtaqueNegativo new signal.		].	escenario :=  unEscenario .	posicion := Posicion crearConX: (unaPosicion getX) ConY: (unaPosicion getY).	(unEscenario estaDentro: posicion ) ifFalse: [		PosicionIncorrecta new signal.		].	fuerzaDeAtaque := unAtaque.	direccion := Direccion crearDesde: posicion  Hasta: (unObjetivo getPosicion ).		IA := (PerseguirA crearPara: self ConObjetivo: unObjetivo).	interaccion := (AtacarAlJugador crearPara: self ConValor: fuerzaDeAtaque).	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DisparoRastreador class	instanceVariableNames: ''!!DisparoRastreador class methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/20/2011 23:47'!crearConEscenario: unEscenario ConAtaque: unAtaque ConPosicion: unaPosicion ConObjetivo: unObjetivo	| d |	d := self new.	d inicializarConEscenario: unEscenario ConAtaque: unAtaque ConPosicion: unaPosicion ConObjetivo: unObjetivo.	^d.! !Disparos subclass: #DisparoSimple	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!DisparoSimple methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:37'!inicializarConEscenario: unEscenario ConAtaque: unAtaque ConPosicion: unaPosicion	"el disparo simple es aquel que dispara el jugador, ya sea laser, cohete o torpedo simple. una vez en el escenario, sube verticalmente hasta salir del escenario. "	(unAtaque <= 0) ifTrue: [		ValorDeAtaqueNegativo new signal.		].	escenario :=  unEscenario .	posicion := Posicion crearConX: (unaPosicion getX) ConY: (unaPosicion getY).	(unEscenario estaDentro: posicion ) ifFalse: [		PosicionIncorrecta new signal.		].	fuerzaDeAtaque := unAtaque.	direccion := Direccion crearConX: 0 ConY: 1.			IA := (VueloRectoHaciaArriba crearPara: self).	interaccion := (AtacarACualquieraMenosAlJugador crearPara: self ConValor: fuerzaDeAtaque).	! !ObjetosMoviles subclass: #ElementosEspeciales	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!ElementosEspeciales methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:37'!atacar: x	"los elementos especiales no sufren ataque, son invulnerables."! !!ElementosEspeciales methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 00:58'!morir	self salir.! !ElementosEspeciales subclass: #BonusArmaNueva	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!BonusArmaNueva methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 01:32'!inicializarConEscenario: unEscenario EnX: x EnY: y ConArma: unArma	escenario :=  unEscenario .	posicion := Posicion crearConX: x ConY: y.		interaccion := SumarArma crearPara: self ConValor: (unArma).	IA := QuedarseQuieto crearPara: self.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BonusArmaNueva class	instanceVariableNames: ''!!BonusArmaNueva class methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 01:31'!crearConEscenario: unEscenario EnX: x EnY: y ConArma: unArma	| a |	a := self new.	a inicializarConEscenario: unEscenario  EnX: x EnY: y ConArma: unArma.	^a.! !ElementosEspeciales subclass: #BonusEnergia	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!BonusEnergia methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:37'!inicializarConEscenario: unEscenario EnX: x EnY: y	escenario :=  unEscenario .	posicion := Posicion crearConX: x ConY: y.		interaccion := SumarEnergia crearPara: self ConValor: 500.	IA := QuedarseQuieto crearPara: self.	! !ElementosEspeciales subclass: #BonusMunicion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!BonusMunicion methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:36'!inicializarConEscenario: unEscenario EnX: x EnY: y	escenario :=  unEscenario .	posicion := Posicion crearConX: x ConY: y.		interaccion := SumarMunicion crearPara: self ConValor: 1000.	IA := QuedarseQuieto  crearPara: self.	! !ElementosEspeciales subclass: #BonusPuntos	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!BonusPuntos methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:36'!inicializarConEscenario: unEscenario EnX: x EnY: y	escenario :=  unEscenario .	posicion := Posicion crearConX: x ConY: y.		interaccion := SumarPuntos crearPara: self ConValor: 100.	IA := QuedarseQuieto  crearPara: self.	! !ElementosEspeciales subclass: #BonusVidaExtra	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!BonusVidaExtra methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:36'!inicializarConEscenario: unEscenario EnX: x EnY: y	escenario :=  unEscenario .	posicion := Posicion crearConX: x ConY: y.		interaccion := SumarVidas crearPara: self ConValor: 1.	IA := QuedarseQuieto crearPara: self.	! !Object subclass: #ParOrdenado	instanceVariableNames: 'x y'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!ParOrdenado methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 09:37'!getX	^x.! !!ParOrdenado methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 09:37'!getY	^y.! !!ParOrdenado methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 20:25'!inicializarConX: x0 ConY: y0	x := x0.	y := y0.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ParOrdenado class	instanceVariableNames: ''!!ParOrdenado class methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 20:25'!crearConX: x0 ConY: y0	| a |	a := self new.	a inicializarConX: x0 ConY: y0.	^a.! !ParOrdenado subclass: #Direccion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Direccion methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 00:46'!inicializarDesde: inicio Hasta: final	"Hay 8 libertades de movimiento en el juego, y cada una esta representada por un par ordenado: subir: (0,1), bajar: (0,-1), diagonal hacia arriba a la derecha: (1,1), diagonal abajo a la derecha: (1,-1), etc.).	esta funcion crea una par ordenado que apunta lo mas preciso que se puede desde la posicion inicial hasta la final. Muy util para misiles rastreadores."	|deltaX deltaY|		deltaX := (final getX - inicio getX).	deltaY := (final getY - inicio getY).	(deltaX = 0) ifTrue: [		y := deltaY sign.		x := 0.		] ifFalse: [	((deltaY / deltaX ) abs < 2  )  ifTrue: [		x := deltaX sign.		y := deltaY sign.		] ifFalse:  [		(deltaX abs > deltaY abs) ifTrue: [			x := deltaX sign.			y := 0.			] ifFalse: [			y := deltaY sign.			x := 0.			].		].	].! !!Direccion methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 21:32'!reversa	x := x negated.	y := y negated.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Direccion class	instanceVariableNames: ''!!Direccion class methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/17/2011 21:40'!crearDesde: inicio Hasta: final	| a |	a := self new.	a inicializarDesde: inicio Hasta: final.	^a.  ! !IA subclass: #PerseguirA	instanceVariableNames: 'objetivo pasos tiempoDeVida'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!PerseguirA methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 03:18'!hacer	"esta es la IA de un torpedo rastreador generico."	titere apuntarAlObjeto: objetivo.	titere mover.	tiempoDeVida := tiempoDeVida +1.	(tiempoDeVida > 100 | ((titere getPosicion) equalsTo: (objetivo getPosicion)) ) ifTrue: [		titere salir.		].	! !!PerseguirA methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/20/2011 23:28'!inicializarPara: objeto ConObjetivo: unObjetivo	titere := objeto .	objetivo := unObjetivo.	pasos := 1.	tiempoDeVida := 0.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PerseguirA class	instanceVariableNames: ''!!PerseguirA class methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/20/2011 23:28'!crearPara: objeto ConObjetivo: unObjetivo	| ia |	ia := self new.	ia inicializarPara: objeto ConObjetivo: unObjetivo.	^ia.! !ObjetosMoviles subclass: #Personajes	instanceVariableNames: 'energia puntosPorDestruccion'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Personajes methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 20:08'!atacar: x	energia := (energia - x).	(energia <= 0) ifTrue: [		self morir.		].		! !!Personajes methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 01:42'!estaVivo	^(energia > 0).	! !!Personajes methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 12:52'!getEnergia	^energia.! !!Personajes methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:50'!getPuntosPorDestruccion	^puntosPorDestruccion .! !!Personajes methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 00:58'!morir	escenario informarDestruccion: self.! !Personajes subclass: #Armados	instanceVariableNames: 'armas armaActual'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Armados methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 00:52'!cambiarArma	| auxPos |	(armas = nil ) ifFalse:[		auxPos := (armas indexOf: armaActual) .		auxPos := auxPos + 1.		(auxPos > armas size )  ifTrue: [ auxPos := 1].		armaActual := armas at: auxPos .		].! !!Armados methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 17:24'!disparar	(armaActual getMunicion > 0) ifTrue: [		armaActual dispararDirigidoConEscenario: escenario ConPosicion: posicion.		].	! !!Armados methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 17:10'!getArmaActual	^armaActual .! !Personajes subclass: #AvionCivil	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!AvionCivil methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 01:16'!inicializarConEscenario: unEscenario EnX: x EnY: y	escenario :=  unEscenario .	posicion := Posicion crearConX: x ConY: y.	(unEscenario estaDentro: posicion ) ifFalse: [		PosicionIncorrecta new signal.		].	energia := 500.	puntosPorDestruccion := -300.	direccion := Direccion crearConX: 0 ConY: 0.  		IA := DeIzquierdaADerechaYSalirDelEscenario crearPara: self.  	interaccion := AtacarAlJugadorYSobrevivir  crearPara: self ConValor: 100.		! !Armados subclass: #AvionGuia	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!AvionGuia methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 00:59'!dispararTorpedoRastreador	(armas at: 3) dispararRastreadorConEscenario: escenario ConPosicion: posicion ConObjetivo: (escenario getJugador ).	! !!AvionGuia methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 13:23'!inicializarConEscenario: unEscenario EnX: x EnY: y	escenario :=  unEscenario .	posicion := Posicion crearConX: x ConY: y.	(unEscenario estaDentro: posicion ) ifFalse: [		PosicionIncorrecta new signal.		].	energia := 5000.	armas := LinkedList new.	armas add: Laser crear.	armas add: Cohete crear.	armas add: TorpedoRastreador crear.	armas add: TorpedoSimple crear.	armaActual := armas at: 1.	puntosPorDestruccion := 1000.		IA := IAAvionGuia  crearPara: self.	interaccion := AtacarAlJugadorYSobrevivir  crearPara: self ConValor: 1000.	! !Armados subclass: #Avioneta	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Avioneta methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:47'!inicializarConEscenario: unEscenario EnX: x EnY: y	escenario :=  unEscenario .	posicion := Posicion crearConX: x ConY: y.	(unEscenario estaDentro: posicion ) ifFalse: [		PosicionIncorrecta new signal.		].	armas := nil.	armaActual := (Laser crear).	puntosPorDestruccion := 20.	energia := 100.			IA := IdaYVuelta crearPara: self.	interaccion := AtacarAlJugadorYSobrevivir  crearPara: self ConValor: 100.	! !Armados subclass: #Bombardero	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Bombardero methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 00:39'!dispararTorpedoRastreador	(armas at: 3) dispararRastreadorConEscenario: escenario ConPosicion: posicion ConObjetivo: (escenario getJugador ).	! !!Bombardero methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 13:35'!inicializarConEscenario: unEscenario EnX: x EnY: y	escenario :=  unEscenario .	posicion := Posicion crearConX: x ConY: y.	(unEscenario estaDentro: posicion ) ifFalse: [		PosicionIncorrecta new signal.		].	energia := 500.	armas := LinkedList new.	armas add: Laser crear.	armas add: Cohete crear.	armas add: TorpedoRastreador crear.	armaActual := armas at: 1.	puntosPorDestruccion := 20.		interaccion := AtacarAlJugadorYSobrevivir  crearPara: self ConValor: 500.	IA := ZigZag crearPara: self.	! !!Bombardero methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 01:33'!morir	| bonusCohete |	bonusCohete := BonusArmaNueva crearConEscenario: escenario  EnX: (posicion getX) EnY: (posicion getY) ConArma: (Cohete crear).	escenario agregarObjetoMovil: bonusCohete.	escenario informarDestruccion: self.  	! !Armados subclass: #Caza	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Caza methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 00:32'!inicializarConEscenario: unEscenario EnX: x EnY: y	escenario :=  unEscenario .	posicion := Posicion crearConX: x ConY: y.	(unEscenario estaDentro: posicion ) ifFalse: [		PosicionIncorrecta new signal.		].	energia := 300.	puntosPorDestruccion := 30.	armaActual := TorpedoSimple crear.		IA := EnDireccionAlJugador crearPara: self.	interaccion := AtacarAlJugadorYSobrevivir crearPara: self ConValor: 100.	! !!Caza methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 21:03'!morir	| bonusEnergia |	bonusEnergia := BonusEnergia crearConEscenario: escenario  EnX: (posicion getX) EnY: (posicion getY)  .	escenario agregarObjetoMovil: bonusEnergia.	escenario informarDestruccion: self.  	  ! !Personajes subclass: #Explorador	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Explorador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 13:35'!inicializarConEscenario: unEscenario EnX: x EnY: y	escenario :=  unEscenario .	posicion := Posicion crearConX: x ConY: y.	(unEscenario estaDentro: posicion ) ifFalse: [		PosicionIncorrecta new signal.		].	energia := 100.	puntosPorDestruccion := 50.		IA := VueloCircular crearPara: self.	interaccion := AtacarAlJugador crearPara: self ConValor: 100.		! !Personajes subclass: #Helicoptero	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Helicoptero methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 00:32'!inicializarConEscenario: unEscenario EnX: x EnY: y	escenario :=  unEscenario .	posicion := Posicion crearConX: x ConY: y.	(unEscenario estaDentro: posicion ) ifFalse: [		PosicionIncorrecta new signal.		].	energia := 500.	puntosPorDestruccion := -200.	direccion := Direccion crearConX: 0 ConY: 0.  		IA := VueloCircular crearPara: self.  	interaccion := AtacarAlJugadorYSobrevivir  crearPara: self ConValor: 100.		! !Armados subclass: #Jugador	instanceVariableNames: 'puntuacion vidas'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Jugador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 16:35'!disparar	armaActual dispararSimpleConEscenario: escenario ConPosicion: posicion.! !!Jugador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 21:26'!getPuntuacion	^puntuacion .! !!Jugador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 11:50'!getVidas	^vidas.! !!Jugador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 01:00'!inicializarConEscenario: unEscenario EnX: x EnY: y	escenario :=  unEscenario .	posicion := Posicion crearConX: x ConY: y.	(unEscenario estaDentro: posicion ) ifFalse: [		PosicionIncorrecta new signal.		].	energia := 1000.	puntosPorDestruccion := 0.	armas := LinkedList  new.	armas add: (Laser crear).	armaActual := armas at: 1.	puntuacion := 0.	vidas := 3.		escenario setJugador: self.		interaccion := AtacarACualquieraYSobrevivir crearPara: self ConValor: 100.	IA := QuedarseQuieto crearPara: self.  	! !!Jugador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 12:58'!morir	vidas := vidas -1.	(vidas > 0) ifTrue: [		energia := 1000.		] ifFalse: [		Transcript show: 'Perdiste!! tu puntuacion es: '; show: puntuacion ; cr.		escenario informarSalida: self.		].	! !!Jugador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 16:42'!sumarArma: x	armas add: x.		  	! !!Jugador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 00:11'!sumarEnergia: x	energia := energia  + x.! !!Jugador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 00:14'!sumarMunicion: x	armaActual sumarMunicion: x.	  	! !!Jugador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/17/2011 13:06'!sumarPuntuacion: x	puntuacion := (puntuacion + x).	! !!Jugador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/16/2011 00:11'!sumarVidas: x	vidas := vidas + x.	! !ParOrdenado subclass: #Posicion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!Posicion methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/22/2011 15:23'!equalsTo: otraPosicion	^((x = otraPosicion getX) & ( y = otraPosicion getY)).! !!Posicion methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 23:33'!moverEnDireccion: unaDireccion	"cambia el par ordenado segun lo que indica la direccion."	x := x +(unaDireccion getX).	y := y + (unaDireccion getY).	! !!Posicion methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 02:23'!moverseHacia: otraPosicion	| direccion |	direccion := Direccion crearDesde: self Hasta: otraPosicion .	self moverEnDireccion: direccion .	! !!Posicion methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 23:29'!validarConEscenario: unEscenario	"devuelve V o F segun si la posicion esta dentro de los limites del escenario"	^(unEscenario estaDentro: self).	! !Error subclass: #PosicionIncorrecta	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!IA subclass: #QuedarseQuieto	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!QuedarseQuieto methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 00:36'!hacer	"El nombre de la clase explica todo."! !!QuedarseQuieto methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/17/2011 15:16'!inicializarPara: objeto	titere := objeto.! !Interacciones subclass: #SumarArma	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!SumarArma methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:35'!interactuarCon: otroObjetoMovil		(otroObjetoMovil == jugador ) ifTrue: [		otroObjetoMovil sumarArma: valor.		dueño salir .		]! !Interacciones subclass: #SumarEnergia	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!SumarEnergia methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:35'!interactuarCon: otroObjetoMovil		(otroObjetoMovil == jugador ) ifTrue: [		otroObjetoMovil sumarEnergia: valor.		dueño salir .		]! !Interacciones subclass: #SumarMunicion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!SumarMunicion methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:35'!interactuarCon: otroObjetoMovil		(otroObjetoMovil == jugador ) ifTrue: [		otroObjetoMovil sumarMunicion: valor.		dueño salir .		]! !Interacciones subclass: #SumarPuntos	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!SumarPuntos methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:35'!interactuarCon: otroObjetoMovil		(otroObjetoMovil == jugador ) ifTrue: [		otroObjetoMovil sumarPuntuacion: valor.		dueño salir .		]! !Interacciones subclass: #SumarVidas	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!SumarVidas methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/19/2011 01:35'!interactuarCon: otroObjetoMovil		(otroObjetoMovil == jugador ) ifTrue: [		otroObjetoMovil sumarVidas: valor.		dueño salir .		]! !Error subclass: #TamanoIncorrecto	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!Armas subclass: #TorpedoRastreador	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!TorpedoRastreador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/22/2011 15:09'!dispararRastreadorConEscenario: unEscenario ConPosicion: unaPosicion ConObjetivo: unObjetivo	"un torpedo rastreador recibe un objetivo, que en este juego es siempre el jugador."	| d |	(self getMunicion > 0 ) ifTrue: [		d := DisparoRastreador crearConEscenario: unEscenario ConAtaque: ataque ConPosicion: unaPosicion ConObjetivo: unObjetivo.		d mover.		unEscenario agregarObjetoMovil: d.		].	! !!TorpedoRastreador methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/17/2011 10:37'!inicializar	ataque := 250.	municion := 100.! !Armas subclass: #TorpedoSimple	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!TorpedoSimple methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/18/2011 00:18'!inicializar	ataque := 100.	municion := 100.! !Error subclass: #ValorDeAtaqueNegativo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!IA subclass: #VueloCircular	instanceVariableNames: 'vueltas fase listaDePosiciones'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!VueloCircular methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/22/2011 15:15'!hacer	"esta IA mueve al titere alrededor del centra del escenario, por los bordes del mismo. es la IA de los helicopteros y exploradores."	titere moverseHacia: (listaDePosiciones at: fase).	(fase = 8 ) ifTrue: [		fase := 1.		vueltas := vueltas +1.		].	(vueltas = 10) ifTrue: [		titere salir.		].	! !!VueloCircular methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 02:38'!inicializarPara: objeto	| tam |	titere := objeto.	tam := titere getEscenario getTamano .	vueltas := 0.	fase := 1.	listaDePosiciones := LinkedList new.	listaDePosiciones add: ( Posicion crearConX: tam /3 ConY: 0 ) .	listaDePosiciones add: ( Posicion crearConX: tam *2 /3 ConY: 0 ) .	listaDePosiciones add: ( Posicion crearConX: tam  ConY: tam /3 ) .	listaDePosiciones add: ( Posicion crearConX: tam  ConY: tam *2 /3 ) .	listaDePosiciones add: ( Posicion crearConX: tam *2 /3 ConY: tam ) .	listaDePosiciones add: ( Posicion crearConX: tam /3 ConY: tam ) .	listaDePosiciones add: ( Posicion crearConX: 0 ConY: tam *2 /3 ) .	listaDePosiciones add: ( Posicion crearConX: 0 ConY: tam /3 ) .		! !IA subclass: #VueloRectoHaciaArriba	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!VueloRectoHaciaArriba methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 01:22'!hacer	"Esta IA mueve al titere hacia arriba y los saca del escenario al llegar al borde superior. es la IA de los disparos simples, es decir, los disparos del jugador."	titere subir.	(titere estaEnBorde ) ifTrue: [		titere salir.		].	! !!VueloRectoHaciaArriba methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/22/2011 13:37'!inicializarPara: objeto	titere := objeto.! !IA subclass: #ZigZag	instanceVariableNames: 'pasos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1-92079'!!ZigZag methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/21/2011 17:03'!hacer	"esta IA hace descender en zig zag al titere. al llegar al borde del escenario, el titere desaparece. es la IA del bombardero "	(pasos < 5) ifTrue: [		titere bajar .		titere moverIzquierda .		] ifFalse: [		titere bajar.		titere moverDerecha .		].	pasos := pasos +1.	(pasos > 9) ifTrue: [		pasos := 0.		].	(pasos isDivisibleBy: 3  ) ifTrue: [		titere disparar.		].	(pasos isDivisibleBy: 4  ) ifTrue: [		titere dispararTorpedoRastreador .		].	(titere estaEnBorde  ) ifTrue: [		titere salir.		].	! !!ZigZag methodsFor: 'as yet unclassified' stamp: 'JavierChoque 4/17/2011 22:13'!inicializarPara: objeto	titere := objeto.  	pasos := 0.! !